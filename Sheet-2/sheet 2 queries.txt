//Assignment-4

-- Retrieve the name of the students whose name starts with ‘S’ and contains ‘r’
-- as the second last character.
-- Idea: use Regex
-- Hint: use `like` keyword, % -> many characters, _ -> one character
-- NOTE: like doesn't work with char(10), but works with varchar(10)
-- see this link: https://stackoverflow.com/questions/1543133/like-does-not-work-as-expected
select name
from students
where name like 'S%r_';

-- Retrieve the name of the youngest student(s) from the ‘CST’ department
-- along with the total marks obtained by him (them).
-- Hint: youngest age will have largest year
select name, sum(marks)
from students, crs_regd
where deptcode = 'CSE' 
and crs_rollno = rollno 
and bdate = ( select max(bdate) 
	     from students 
	     where deptcode = 'CSE') 
group by name;


-- Find the age of all the students.
-- Hint: look up the commands used here
select rollno, name, TIMESTAMPDIFF(YEAR, bdate, CURDATE()) as age
from students;


//Assignment-5

-- Retrieve the name of the student(s) who obtained second highest marks in ‘DBMS’.
-- Idea: ordet by has limit and offset
-- limit: limit no.of outputs
-- offset: generally starting point is start, offset x increses starting point by x no. of rows
-- NOTE: direct order then limit 1 offset 1 can give wring result when there are mutiple student with max marks in DBMS 
select rollno, name, marks, crs_cd 
from students, crs_regd, crs_offrd
where   
    crs_rollno = rollno
    and crs_cd = crs_code
    and crs_name = 'DBMS'
    and marks = (   select distinct(marks)
                    from crs_regd, crs_offrd
                    where crs_cd = crs_code
                    and crs_name = 'DBMS'
                    order by marks desc limit 1 offset 1);



-- Find out the differences between highest and lowest marks obtained in each subject.
select crs_cd,max(marks) - min(marks) as mark_diff
from crs_regd
group by crs_cd
order by crs_cd;

-- Assuming the existance of several interdepartmental courses, retrieve the
-- name of the student(s) who is(are) studing under at least one faculty from
-- each department.

select name , count(distinct fac_dept)
from    students 
        left join crs_regd on crs_rollno = rollno
        left join crs_offrd on crs_cd = crs_code
        left join faculty on crs_fac_cd = fac_code
group by name
having count(distinct fac_dept) = (select count(*) from depts);

-- Another Possible Solution
SELECT 
        name
FROM 
        crs_offrd
        ,faculty
        ,crs_regd
        ,students
WHERE 
        crs_fac_cd=fac_code
        AND crs_cd=crs_code
        AND crs_rollno=rollno
GROUP BY name
HAVING COUNT(DISTINCT(fac_dept)) = (SELECT COUNT(*) FROM depts);


-- Assuming the existance of several interdepartmental courses, retrieve the
-- name of the student(s) who is(are) studing under the faculties only from
-- his(their) own department.

-- Step 1: left joins
select *
from    students
        left join crs_regd on crs_rollno = rollno
        left join crs_offrd on crs_cd = crs_code
        left join faculty on crs_fac_cd = fac_code;


-- step 2 : get student rollno who have enrolled on subjects from only one depratment
select rollno
from    
        students 
        left join crs_regd on crs_rollno = rollno
        left join crs_offrd on crs_cd = crs_code
        left join faculty on crs_fac_cd = fac_code
group by rollno
having count(distinct fac_dept) = 1;

--step 3: use the rollno's found in step 2 to get whole data from table, and then see that if deptcode = fac_dept present
select distinct name
from    
        (
                students 
                left join crs_regd on crs_rollno = rollno 
                left join crs_offrd on crs_cd = crs_code
                left join faculty on crs_fac_cd = fac_code
        ) 
        natural join  -- join will happen by roll no as both name same
        (
                select rollno
                from    
                        students 
                        left join crs_regd on crs_rollno = rollno
                        left join crs_offrd on crs_cd = crs_code
                        left join faculty on crs_fac_cd = fac_code
                group by rollno
                having count(distinct fac_dept) = 1
        ) as tb
where deptcode = fac_dept;

-- Another possible Solution
SELECT rollno, name 
FROM students 
WHERE rollno NOT IN (SELECT DISTINCT(rollno) 
                      FROM crs_offrd, faculty, crs_regd, students 
                      WHERE crs_fac_cd=fac_code 
                      AND crs_cd=crs_code 
                      AND crs_rollno=rollno 
                      AND fac_dept!=deptcode 
                      GROUP BY rollno
                      
                      UNION 
                      ((select rollno from students) EXCEPT (select distinct crs_rollno from crs_regd)));

//Assignment-6

-- Display the highest parent incomes, in descending order, for each
-- department excluding ‘ARCH’ such that only those highest parent incomes
-- will appear that are below 12,000.
select name, parent_inc
from students
where 
    deptcode != 'ARCH'
    AND parent_inc < 12000
order by parent_inc desc;

//alternative
select name, perent_inc
from students
where 
    deptcode != 'CSE'
    AND perent_inc < 220000
order by perent_inc desc;



-- Retrieve the fifth highest parent income for hostel number 5.
select name,perent_inc 
from students
where hostel = 5
order by perent_inc desc limit 1 offset 4;

-- Find the roll number of the students from each department who 
-- obtained highest total marks in their own department.

-- IDEA: first group by  rollno to get sum(marks), then use resulting table to group by max(sum(marks)), use the result to get name, and rollno

--STEP 1: group by rollno and get sum marks
select 
    deptcode
    ,rollno
    ,name
    ,sum(marks) as sum
from 
    students 
    inner join crs_regd on crs_rollno = rollno
group by rollno;

-- step 2: use resulting table (see the from table) and group by deptcode to get max(sum(marks))
select 
    deptcode
    ,max(sum)
from    
    (   
        select 
            deptcode
            ,rollno
            ,name
            ,sum(marks) as sum
            from 
                students 
                inner join crs_regd on crs_rollno = rollno
            group by  rollno
    ) as tb1
group by deptcode;


-- step 3: use the previous made table's ans to get name, rollno
select * 
from    
    (   
        select 
            deptcode
            ,rollno
            ,name
            ,sum(marks) as sum
        from 
            students 
            inner join crs_regd on crs_rollno = rollno
        group by  rollno
    ) as tb1
where 
    (deptcode, sum) in  (  
                            select deptcode,max(sum)
                            from    
                                (   
                                    select 
                                        deptcode
                                        ,rollno
                                        ,name
                                        ,sum(marks) as sum
                                    from 
                                        students 
                                        inner join crs_regd on crs_rollno = rollno
                                    group by  rollno
                                ) as tb1
                            group by deptcode
                        );

//alternative
SELECT name,deptcode,s.rollno

FROM students AS s

WHERE s.rollno = (

SELECT cr.crs_rollno

FROM crs_regd AS cr

WHERE s.deptcode = (

SELECT deptcode

FROM students

WHERE rollno = cr.crs_rollno
)
GROUP BY cr.crs_rollno

ORDER BY SUM(cr.marks) DESC

LIMIT 1
);